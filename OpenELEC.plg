<?xml version='1.0' standalone='yes'?>

<!--
	VERSION INFORMATION
		2014-10-15
			- Eric: Lots of bug fixes, cleanup, and move to GitHub.
		2014-10-07
			- Updating naming convention to OpenELEC.
		2014-10-03
			- Updated webGui page to only display stop/destroy buttons if the VM is running.
		2014-10-01
			- PLG to wait for network to be ready as a temporary work around to survive reboots.  Will be changing this in an upcoming revision to not be necessary.



	ROADMAP
		- Move plugin to github and configure plugin to utilize the pulling of an archive (tar.xz) into the /config/packages folder for auto-extraction host start-up.
		- Make webGui page to display VM status indicator
		- When a user clicks to start a VM from within the webGui, the page should refresh immediately to show the VM running and remove controls from allowing the user to attempt to start it again.
		- When a user clicks to shutdown a VM from within the webGui, it takes a little bit for the VM to actually end all processes and shutdown.  Need to indicate this to the user in a way that prevents them from going "click happy" or prematurely clicking the "Destroy" button.
		- Whatever settings the user selects (GPU/Audio/USB devices) should remain the default for subsequent VM starts.
		- Add "autostart" capability for VM (on array start)
		- Clean up presentation of fields
		- Change how "mac address" field is displayed and add logic to prevent users from entering in characters that are not valid for the MAC address.  Also eliminate the ability to edit the first three values of the MAC address string.
-->

<!-- PLUGIN DEFINITIONS -->
<!DOCTYPE PLUGIN [
	<!ENTITY name      "OpenELEC">
	<!ENTITY author    "jonpanozzo">
	<!ENTITY version   "2014.10.15">
	<!ENTITY pluginURL "https://raw.githubusercontent.com/&author;/&name;/master/&name;.plg">
	<!ENTITY plugin    "/boot/config/plugins/&name;">
	<!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN  name="&name;"
		 author="&author;"
		 version="&version;"
		 pluginURL="&pluginURL;"
>

<FILE Run="/bin/bash">
<INLINE>
# Wait until network is ready
timer=60
while [ $timer -gt 0 ]; do
	gateway=$(route -n | awk '/^0.0.0.0/ {print $2}')
	if [ -n "$gateway" ] &amp;&amp; [ $(ping -q -n -c 1 $gateway | awk -F, '/received/ {print $2}' | awk '{print $1}') -eq 1 ]; then
		break
	fi
	timer=$((timer-1))
	sleep 1
done
if [ $timer -eq 0 ]; then
	echo "No network communication !!!"
fi
</INLINE>
</FILE>


<FILE Name="&plugin;/&version;.tar.gz">
<URL>https://github.com/&author;/&name;/archive/&version;.tar.gz</URL>
</FILE>


<FILE Run="/bin/bash">
<INLINE>
if [ ! -d &emhttp; ]; then
	mkdir -p &emhttp;
fi
tar -zxf &plugin;/&version;.tar.gz --strip=1 -C &emhttp;/
&emhttp;/event/disks_mounted
</INLINE>
</FILE>


<!-- PLUGIN REMOVAL SCRIPT -->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
rm -r /mnt/user/vms/kvm/&name;
rm -r /mnt/user/appdata/&name;
rm -r /usr/local/emhttp/plugins/&name;
</INLINE>
</FILE>
</PLUGIN>